import { NavbarLayout } from "@/components/layout/NavbarLayout";
import { WordView } from "@/components/word/WordView";
import { DictionaryModels } from "@/utils/dictionary/dictionary.models";
import { DictionaryService } from "@/utils/dictionary/dictionary.service";
import { GetServerSideProps } from "next";
import Head from "next/head";

interface IProps {
  word?: DictionaryModels.Word | null | undefined;
}

export const getServerSideProps: GetServerSideProps<IProps> = async (
  context
) => {
  let word: DictionaryModels.Word | null | undefined;

  if (context.query.word) {
    word = await DictionaryService.getWord(context.query.word as string);
  }

  const props: IProps = {};
  if (word !== undefined) {
    props.word = word;
  }

  return {
    props,
  };
};

export default function Home({ word }: IProps) {
  return (
    <>
      <Head>
        <title>Dictionary</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <NavbarLayout>
        <WordView word={word} />
      </NavbarLayout>
    </>
  );
}
